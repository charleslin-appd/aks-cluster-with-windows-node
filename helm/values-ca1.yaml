# To install Cluster Agent 
installClusterAgent: true
# For mix OS cluster, we can't yet using Helm chart for windows agent
installInfraViz: false

# AppDynamics controller info
controllerInfo:
  url: https://se-lab.saas.appdynamics.com:443
  account: se-lab  
  # see values-ca1-sensitive.yaml for the following additional settings   
  # username: <username>                          
  # password: <password>                                 
  # accessKey: <accessKey>
  # globalAccount: <globalAccountKey>  # To be provided when using machineAgent Window Image              

# Cluster agent config
clusterAgent:
  nsToMonitorRegex: .*
  logLevel: "DEBUG"

install:
  metrics-server: false

instrumentationConfig:
  enabled: true
  instrumentationMethod: Env
  nsToInstrumentRegex: default
  defaultAppName: cjl-AD-Air-hybrid
  #appNameStrategy: namespace
  instrumentationRules:
    - language: java
      customAgentConfig: "-Dappdynamics.opentelemetry.enabled=true -Dotel.traces.exporter=otlp -Dotel.resource.attributes=\"service.name=$(APPDYNAMICS_AGENT_TIER_NAME),service.namespace=cjl-AD-Air-hybrid\"  -Dotel.exporter.otlp.traces.endpoint=http://opentelemetrycollector.default.svc.cluster.local:4317"
      labelMatch: 
          - framework: java
      imageInfo:
        image: appdynamics/java-agent:latest
        agentMountPath: /opt/appdynamics
        imagePullPolicy: IfNotPresent
    - language: nodejs
      labelMatch: 
        - framework: nodejs
      imageInfo:
        image: "appdynamics/nodejs-agent:21.9.0-16-stretch-slim"
        agentMountPath: /opt/appdynamics
        imagePullPolicy: IfNotPresent
      analyticsHost: analytics-agent.host.name
      analyticsPort: 443
      analyticsSslEnabled: true

# InfraViz config
infraViz:
  nodeOS: all 
  imageInfo:
    machineAgentWinImage: appdynamics/machine-agent-analytics:win-latest
  enableMasters: false
  stdoutLogging: false
  enableContainerHostId: true
  enableServerViz: true
  enableDockerViz: false

# Netviz config
netViz:
  enabled: true
  netVizPort: 3892

# Deploy operator to the system pool
operatorPod:
  nodeSelector: 
    nodepool-type: "system"

# Agent pod specific properties
agentPod:
  nodeSelector: 
    nodepool-type: "system"
  tolerations: []
  resources:
    limits:
      cpu: "1250m"
      memory: "300Mi"
    requests:
      cpu: "750m"
      memory: "150Mi"
  labels: {}

# Infraviz pod specific properties
infravizPod:
  #nodeSelector:
  #  kubernetes.io/os: linux
  resources:
    limits:
      cpu: 500m
      memory: "1G"
    requests:
      cpu: 200m
      memory: "800M"
